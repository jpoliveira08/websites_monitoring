version: '3.9'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local

networks:
  monitoring:
    driver: bridge

services:
  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - monitoring

  grafana:
    build: ./grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  blackbox_exporter:
    build: ./blackbox_exporter
    container_name: blackbox_exporter
    ports:
      - "9115:9115"
    command: 
      - "--config.file=/etc/blackbox_exporter/blackbox.yml"
    restart: unless-stopped
    networks:
      - monitoring

  alertmanager:
    build: ./alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager:/etc/alertmanager/
      - alertmanager-data:/data
    command: 
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    restart: unless-stopped
    networks:
      - monitoring

  discord_alerts:
    build: ./discord_alerts
    container_name: discord_alerts
    restart: unless-stopped
    environment:
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK_URL} # Point discord alertmanager to discord server
    networks:
      - monitoring

  application:
    build: ./public
    container_name: application
    restart: always
    volumes:
      - ./public:/var/www/html
    ports:
      - '9999:80'
    networks:
      - monitoring

  database_df:
    image: mysql:5.7
    container_name: database_df
    restart: always
    environment:
      MYSQL_DATABASE: 'application_df'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3310:3306'
    networks:
      - monitoring

  database_mg:
    image: mysql:5.7
    container_name: database_mg
    restart: always
    environment:
      MYSQL_DATABASE: 'application_mg'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3320:3306'
    networks:
      - monitoring

  database_rs:
    image: mysql:5.7
    container_name: database_rs
    restart: always
    environment:
      MYSQL_DATABASE: 'application_rs'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3330:3306'
    networks:
      - monitoring